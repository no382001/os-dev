

FEATURES:
  - crc and loading dynamic kernel size

fileio:
  - open/ write

fs:
  - fat16 long filename
  - ext2 support?
  - elf files

adjustments:
 - adjust the linker file, put heap on _end
 - inconsistent type usage

multitaskin:
 - im not confident that semaphore actually does what it should, and the interruption logic could be improved with a better model like having priorities, placing currently io-blocked tasks to top-prio, right now its just a hack, wasting some cycles for sure
 - signalling, recovery strategies

forking should work now?

bfd font:
  - some letters are misaligned

runtime dynamic linker for binaries, instead of implementing userland and syscalls
 - when a binary is loaded, the linker would resolve the syscalls or whatever, but how, id need my own exec format, so i can know when and where something unresolved would be called, this can bite me in the back later, and i will need to replace it further down the line. but it seems like a quick and easy way to get `outside` programs running from fs
 https://forum.osdev.org/viewtopic.php?t=57631
 - this guy did something, and can exec shit right away, maybe it would be useful if i could actually run things not specifically compiled for my os only, POSIX compliance? there has to be more than that


TODO:
  [ ] asan
  [ ] kfree corruption
  [ ] thread the ehternet packets
  [ ] add some log groups for debugging
  [ ] ip packets are inefficient, it works but...
  [ ] vfs based on 9p
  [ ] sockets, for udp

c9:
  - port client server code
  - map the fat16 and create the p9 vfs
  - sockets for udp
  - the client and server is stateless, if the udp cant handle the file size, the client will have to request by offset
  - comm in/out with plain udp to the s9 P92000 implementation
  - connect with forth to test
  - setup a dns service the outside server

the os should reach out to a 9p configuration server, could serve the bootstrap code
  besides being cool, could useful for testing

bootloader:
  switch to that other one instead of loading with --kernel

spawn a thread with a handler on some hardcoded socket for p92000

do the vfs first
scheme and forth?

have upper layer of vfs that maps other vfss to some directories
forth should handle string and the kb callback alright


fix up tinylisp to have variadic lambdas, or ribbit or zforth
tinylisp and zzforth needs jumpbuffers, but i have task swtiching already, shouldnt be a problem
